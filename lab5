# Task 1. Lists

# TASK 1.1
user_input = input("User input: ")
char_list = list(user_input.lower())
print("Created list is:")
print(char_list)

# TASK 1.2
char_freq = [(char, char_list.count(char)) for char in set(char_list)]
print("Code Output:")
print(char_freq)

# TASK 1.3
list_vow = [(char, char_list.count(char)) for char in char_freq if char[0] in 'aeiou']
list_cons = [(char, char_list.count(char)) for char in char_freq if char[0].isalpha() and char[0] not in 'aeiou']
list_sym = [(char, char_list.count(char)) for char in char_freq if not char[0].isalpha()]
print("list_vow =", list_vow)
print("list_cons =", list_cons)
print("list_sym =", list_sym)

# TASK 1.4
list_A = [1, 5, 8, 7, 9, 6, 7, 5, 8, 3, 9, 10, 2, 1, 3, 4, 8]
sorted_list = sorted(list_A)
n = len(sorted_list)
quartile_size = n // 4
q1_size = quartile_size
q2_size = quartile_size
q3_size = quartile_size

if n % 4 != 0:
    q1_size += n % 4

q1 = sorted_list[:q1_size]
q2 = sorted_list[q1_size:q1_size + q2_size]
q3 = sorted_list[q1_size + q2_size:q1_size + q2_size + q3_size]
q4 = sorted_list[q1_size + q2_size + q3_size:]

print("q1 =", q1)
print("q2 =", q2)
print("q3 =", q3)
print("q4 =", q4)

# Task 2. Dictionaries

# TASK 2.1
student = {'name': 'Adam', 'assignment': [82, 56, 44, 30], 'test': [78, 77], 'lab': [78.2, 77.2]}

# TASK 2.2
submission_check = {student['name']: 6 if len(student['assignment']) == 4 and len(student['lab']) == 2 and len(student['test']) == 2 else
                    len(student['assignment']) + len(student['lab']) + len(student['test'])}
print(submission_check)

# TASK 2.3
def calculate_final_grade(student):
    if len(student['assignment']) >= 4 and len(student['lab']) >= 2 and len(student['test']) >= 2:
        assignment_average = sum(student['assignment']) / len(student['assignment'])
        lab_average = sum(student['lab']) / len(student['lab'])
        test_average = sum(student['test']) / len(student['test'])
        final_grade = 0.3 * assignment_average + 0.5 * lab_average + 0.2 * test_average
        student['final_grade'] = final_grade
    else:
        student['final_grade'] = 0

# Sample Input 1
student1 = {'name': 'Adam', 'assignment': [82, 56, 44, 30], 'test': [78, 77], 'lab': [78.2, 77.2]}
submission_rate1 = {'Adam': 6}
calculate_final_grade(student1)
print(student1)

# Sample Input 2
student2 = {'name': 'Kevin', 'assignment': [82, 30], 'test': [], 'lab': [78.2]}
submission_rate2 = {'Adam': 6, 'Kevin': 3}
calculate_final_grade(student2)
print(student2)

# TASK 2.4
students = {student1['name']: student1, student2['name']: student2}
print(students)

# Task 3

# TASK 3.1
transactions = [(1001, 2), (1001, 1), (1003, 2), (1005, 2), (1001, 3), (1007, 1), (1007, 2), (1100, 2), (1003, 2), (1001, 1)]
stats = {}

for user_id, transaction_type in transactions:
    if user_id not in stats:
        stats[user_id] = {1: 0, 2: 0, 3: 0, 'mft': None, 'lft': None}

    if transaction_type in [1, 2, 3]:
        stats[user_id][transaction_type] += 1

for user_id, user_data in stats.items():
    transaction_counts = [(t, user_data[t]) for t in [1, 2, 3]]
    transaction_counts.sort(key=lambda x: -x[1])
    most_frequent = transaction_counts[0][0]
    least_frequent = transaction_counts[-1][0]
    stats[user_id]['mft'] = most_frequent
    stats[user_id]['lft'] = least_frequent

print(stats)

# Объяснение 
# 1.1 Создание списка из пользовательского ввода:
# Пользователь вводит строку.
# Строка преобразуется в список маленьких букв (char_list).
# 1.2 Подсчет частоты символов:
# Создается список кортежей (char_freq), где каждый кортеж содержит символ и его частоту в char_list.
# 1.3 Создание списков гласных, согласных и символов:
# Создаются три списка: list_vow, list_cons, и list_sym.
# list_vow содержит гласные и их частоту.
# list_cons содержит согласные и их частоту.
# list_sym содержит символы и их частоту.
