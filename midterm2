TASK 1
def translateLetter(*letters):
    letter_points = {'A+': 4.3, 'A': 4.0, 'A-': 3.7, 'B+': 3.3, 'B': 3.0, 'B-': 2.7,
                     'C+': 2.3, 'C': 2.0, 'C-': 1.7, 'D+': 1.3, 'D': 1.0, 'D-': 0.7}
    return [letter_points[letter] for letter in letters]

def translatePercentage(*percentages):
    return [translateLetter(grade)[0] for grade in percentages]

def calculateGPA(*args):
    total_points = sum(args[i] * args[i + 1] for i in range(0, len(args), 2))
    total_credits = sum(args[i + 1] for i in range(0, len(args), 2))
    
    if total_credits == 0:
        return 0
    
    return total_points / total_credits

# Example usage
letter_points = translateLetter('A+', 'B', 'C')
print("Letter Points:", letter_points)

percentage_points = translatePercentage(100, 45, 55, 89)
print("Percentage Points:", percentage_points)

gpa = calculateGPA(3.3, 4, 2.7, 3, 4.0, 4)
print("Overall GPA:", gpa)
TASK 2
def translateLetter(*scores):
    points = []
    for score in scores:
        if score == 'A+':
            points.append(4.3)
        elif score == 'A':
            points.append(4.0)
        elif score == 'A-':
            points.append(3.7)
        elif score == 'B+':
            points.append(3.3)
        elif score == 'B':
            points.append(3.0)
        elif score == 'B-':
            points.append(2.7)
        elif score == 'C+':
            points.append(2.3)
        elif score == 'C':
            points.append(2.0)
        elif score == 'C-':
            points.append(1.7)
        elif score == 'D+':
            points.append(1.3)
        elif score == 'D':
            points.append(1.0)
        elif score == 'D-':
            points.append(0.7)
    return points

def translatePercentage(*scores):
    points = []
    for score in scores:
        if score >= 95:
            points.append(4.3)
        elif score >= 90:
            points.append(4.0)
        elif score >= 85:
            points.append(3.7)
        elif score >= 80:
            points.append(3.3)
        elif score >= 75:
            points.append(3.0)
        elif score >= 70:
            points.append(2.7)
        elif score >= 65:
            points.append(2.3)
        elif score >= 60:
            points.append(2.0)
        elif score >= 55:
            points.append(1.7)
        elif score >= 50:
            points.append(1.3)
        elif score >= 45:
            points.append(1.0)
        elif score >= 40:
            points.append(0.7)
    return points

def calculateGPA(*args):
    total_points = 0
    total_credits = 0
    for i in range(0, len(args), 2):
        total_points += args[i] * args[i+1]
        total_credits += args[i+1]
    gpa = total_points / total_credits
    return round(gpa, 2)

# example usage
letter_scores = translateLetter('A', 'B+', 'C')
print(letter_scores) # [4.0, 3.3, 2.0]

percentage_scores = translatePercentage(85, 73, 91)
print(percentage_scores) # [3.7, 2.7, 4.0]

gpa = calculateGPA(3.3, 4, 2.7, 3, 4.0, 4)
print(gpa) # 3.7
TASK 3
# define function to read credits from file
def readCredits():
    credits = []
    with open('grades/credits.txt', 'r') as f:
        for line in f:
            credits.append(int(line.strip()))
    return credits

# define function to read scores from file and translate to points
def readAndTranslateScores(filename, translateFunc):
    scores = []
    with open('grades/' + filename, 'r') as f:
        for line in f:
            score = line.strip()
            points = translateFunc(score)
            scores.append(points)
    return scores

# define function to calculate GPA for a single student
def calculateStudentGPA(credits, *scores):
    total_points = 0
    total_credits = sum(credits)
    for i in range(len(scores)):
        total_points += scores[i] * credits[i]
    gpa = total_points / total_credits
    return round(gpa, 2)

# read credits from file
credits = readCredits()

# read and translate scores from files
math_scores = readAndTranslateScores('math.txt', translateLetter)
chemistry_scores = readAndTranslateScores('chemistry.txt', translatePercentage)
english_scores = readAndTranslateScores('english.txt', translatePercentage)

# calculate GPAs for each student
gpas = []
for i in range(len(math_scores)):
    math_score = math_scores[i]
    chemistry_score = chemistry_scores[i]
    english_score = english_scores[i]
    gpa = calculateStudentGPA(credits, math_score, chemistry_score, english_score)
    gpas.append(gpa)

TASK 4
APIs are mechanisms that allow software components to be connected to each other through a set of definitions and protocols. For example, a weather service software system contains daily weather data. The phone's weather app "talks" to this system via an API and shows daily weather updates on the phone.
TASK 5 
A socket is an abstraction that represents the end point of a network connection. You will need to create two sockets for communication: one on the client side and one on the server side. The client and these servers can receive data using sockets.
